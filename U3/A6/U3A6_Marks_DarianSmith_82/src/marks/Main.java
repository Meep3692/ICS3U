/*
Author: Darian
Date Modified: May 8, 2017
IDE: Netbeans 8.2
Program: Store and analyse a list of student marks
File: GUI and Logic
 */
package marks;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

/**
 *
 * @author Meep3_000
 */
public class Main extends javax.swing.JFrame {
    
    List<Integer> markList;
    
    private void refresh(){
        markList.sort(Comparator.naturalOrder());//Sort list
        String listString = "";//Temp var to store stringified list
        listString = markList.stream().map((mark) -> mark + "\n").reduce(listString, String::concat);//Add all marks to the temp var with line breaks
        marksListTextArea.setText(listString);//Set text area
    }
    
    private float getAverage(){
        float output = 0.0f;//Initialise temp output var
        for(int mark : markList) output += mark;//Add all marks to temp var
        output /= markList.size();//Divide by size to create average
        return output;//Return temp var
    }
    
    private int getMax(){
        int max = 0;//Temp var to store max, initialised as very small number
        for(int mark : markList)//Iterate through all marks
            if(mark > max)//Current mark is higher than the highest mark we found so far
                max = mark;//Set temp var to new highest
        return max;//Return temp var
    }
    
    private int getMin(){
        int min = 100;//Temp var to store min, initialised as large number
        for(int mark : markList)//Iterate through all makrs
            if(mark < min)//Current mark is lower than the lowest mark we found so far
                min = mark;//Set temp var to new lowest
        return min;//Return temp var
    }
    
    private int[] getLevels(){
        int[] output = new int[]{0, 0, 0, 0, 0};
        
        return output;
    }
    
    /**
     * Creates new form Main
     */
    public Main() {
        markList = new ArrayList<Integer>();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        titleLabel = new javax.swing.JLabel();
        markInputPanel = new javax.swing.JPanel();
        markInputLabel = new javax.swing.JLabel();
        markInputField = new javax.swing.JTextField();
        markInputButton = new javax.swing.JButton();
        displayPanel = new javax.swing.JPanel();
        statsScrollPane = new javax.swing.JScrollPane();
        statsTextArea = new javax.swing.JTextArea();
        marksListScrollPane = new javax.swing.JScrollPane();
        marksListTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Marks");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        titleLabel.setFont(new java.awt.Font("Edwardian Script ITC", 0, 48)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Marks");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(titleLabel, gridBagConstraints);

        markInputPanel.setLayout(new java.awt.GridBagLayout());

        markInputLabel.setText("Student Mark:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        markInputPanel.add(markInputLabel, gridBagConstraints);

        markInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMark(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 49;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        markInputPanel.add(markInputField, gridBagConstraints);

        markInputButton.setText("Enter");
        markInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMark(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        markInputPanel.add(markInputButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(markInputPanel, gridBagConstraints);

        displayPanel.setLayout(new java.awt.GridBagLayout());

        statsTextArea.setEditable(false);
        statsTextArea.setColumns(1);
        statsTextArea.setRows(9);
        statsScrollPane.setViewportView(statsTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 73;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        displayPanel.add(statsScrollPane, gridBagConstraints);

        marksListTextArea.setEditable(false);
        marksListTextArea.setColumns(1);
        marksListTextArea.setRows(10);
        marksListScrollPane.setViewportView(marksListTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 73;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        displayPanel.add(marksListScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(displayPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputMark(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMark
        int mark;
        try{
            mark = Integer.parseInt(markInputField.getText());
            markList.add(mark);
            refresh();
        }catch(NumberFormatException e){
            
        }
    }//GEN-LAST:event_inputMark

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel displayPanel;
    private javax.swing.JButton markInputButton;
    private javax.swing.JTextField markInputField;
    private javax.swing.JLabel markInputLabel;
    private javax.swing.JPanel markInputPanel;
    private javax.swing.JScrollPane marksListScrollPane;
    private javax.swing.JTextArea marksListTextArea;
    private javax.swing.JScrollPane statsScrollPane;
    private javax.swing.JTextArea statsTextArea;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
